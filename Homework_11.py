'''
# ---------------------Задание 1---------------------------
# составьте словарь англо-русский (или любой другой словарь) из произвольных слов. Реализовать:
# ●	поиск русских слов и их значений в английском языке
# ●	поиск английских слов и их значений в русском языке
# ●	если нет совпадений, необходимо отдельно об этом сообщить пользователю

words = {"hello": "привет", "world": "мир"}
print("----------Словарь----------")
n = input("Введите слово \n")

if n in words:
    print(words.get(n))
elif n in words.values():
    keys = list(words.keys())
    index = list(words.values()).index(n)
    key = keys[index]
    print(key)
else:
    print("Не найдено")


# ---------------------Задание 2---------------------------
# составьте словарь стран и городов каждой страны
# (Для каждой страны минимум два города должно быть, иначе страна и город должна совпадать
# (например {Люксембург: [Люксембург]})). Для каждого города укажите, в какой стране он находится.
# Если город и страна совпадают напечатайте “Город-государство : название_города-государства”

country = {"Россия": ["Москва", "Барнаул", "Новосибирск"], "США": ["Вашингтон", "Сиэтл"], "Люксембург": "Люксембург"}

x = "Россия"

keys = list(country.keys())     #Создаем словарь с ключами

for n in list(country.values()):
    if type(n) == list and x in n   # Если введен город
        index = list(country.values()).index(n)
        key = keys[index]
        print(f"{x} : {key}")
        break
    elif x in country   # Если введена страна
        if type(country[x]) == list:
            print(f"{x} : ", end="")
            for sities in country[x]:
                print(sities, end=" ")
        else:   # Город государство
            print(f"{x} : {country.get(x)}")
        break
    elif type(n) == list and x not in n:    # Если введен город, и его нет в списке значений n, идем к следующему списку значений
        continue
    else:   # Если нет в словаре
        print("Не найдено")


# ---------------------Задание 3---------------------------
# Создайте словарь всех покупателей и стоимости покупок (для каждого покупателя: стоимость покупки). найти для такого словаря:
# ●	максимальную стоимость покупки и кто совершил эту покупку
# ●	кол-во сделанных продаж

buys = {"Коля": 200, "Дима": 500, "Вася": 500, "Саша": 400, "Саша2": 500}

buyers = list(buys.keys())

names = [n for n in buys if buys.get(n) == max(buys.values())]  #Имена с максимальной покупкой (на случай нескольких вариантов)
for n in names:
    print(f"{n}: {buys.get(n)} рублей")

print(f"Количество покупок: {len(buyers)}")



# ---------------------Задание 4---------------------------
# Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
# Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю.
# После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
# Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них


heights = [160, 165, 180, 159, 165, 176, 190, 200, 182]
petya = 162

heights.sort(reverse=True)
print(heights)

for n in heights:
    if petya < n:   # Рост Пети меньше n
        if heights.index(n) + 1 == len(heights):    # Рост Пети меньше всех n
            print(len(heights) + 1)
        else:
            continue
    elif petya == n:    # Рост Пети равен n
        print(len(heights) - heights[::-1].index(n) + 1)    # Ищу первое вхождение n с конца, и после него ставлю Петю
        break
    elif petya > n:     # Рост Пети больше n
        print(heights.index(n) + 1)
        break

'''













